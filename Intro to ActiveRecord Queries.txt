1.  Find the albums recorded by the artist Queen

irb(main):003:0> Artist.where("name = ?", "Queen")
  Artist Load (2.0ms)  SELECT  "artists".* FROM "artists" WHERE (name = 'Queen') LIMIT $1  [["LIMIT", 11]]
=> #<ActiveRecord::Relation [#<Artist id: 51, name: "Queen", created_at: "2006-01-08 22:57:01", updated_at: "2014-01-29 22:10:22">]>
irb(main):004:0> Albums.where(artist_name: "Queen")

irb(main):006:0> Album.where(artist_id: 51)
  Album Load (1.7ms)  SELECT  "albums".* FROM "albums" WHERE "albums"."artist_id" = $1 LIMIT $2  [["artist_id", 51], ["LIMIT", 11]]
=> #<ActiveRecord::Relation [#<Album id: 36, artist_id: 51, title: "Greatest Hits II", created_at: "2008-01-30 14:00:12", updated_at: "2014-01-29 22:14:02">, #<Album id: 185, artist_id: 51, title: "Greatest Hits I", created_at: "2007-12-29 12:02:13", updated_at: "2014-01-29 22:14:02">, #<Album id: 186, artist_id: 51, title: "News Of The World", created_at: "2010-06-23 20:50:06", updated_at: "2014-01-29 22:14:02">]>

2.  Count how many tracks belong to the media type "Protected MPEG-4 video file".

irb(main):010:0> MediaType.where(name: "Protected MPEG-4 video file")
  MediaType Load (1.4ms)  SELECT  "media_types".* FROM "media_types" WHERE "media_types"."name" = $1 LIMIT $2  [["name", "Protected MPEG-4 video file"], ["LIMIT", 11]]
=> #<ActiveRecord::Relation [#<MediaType id: 3, name: "Protected MPEG-4 video file", created_at: "2007-12-07 13:17:17", updated_at: "2014-01-29 22:14:22">]>

irb(main):012:0> Track.where(media_type_id: 3).count
   (36.5ms)  SELECT COUNT(*) FROM "tracks" WHERE "tracks"."media_type_id" = $1  [["media_type_id", 3]]
=> 214

3.  Find the genre with the name "Hip Hop/Rap".

irb(main):013:0> Genre.where("name = ?", "Hip Hop/Rap")
  Genre Load (40.2ms)  SELECT  "genres".* FROM "genres" WHERE (name = 'Hip Hop/Rap') LIMIT $1  [["LIMIT", 11]]
=> #<ActiveRecord::Relation [#<Genre id: 17, name: "Hip Hop/Rap", created_at: "2013-01-20 02:04:31", updated_at: "2014-01-29 22:14:08">]>

4.  Count how many tracks belong to the "Hip Hop/Rap" genre

irb(main):016:0> Track.where(genre_id: 17).count
   (3.4ms)  SELECT COUNT(*) FROM "tracks" WHERE "tracks"."genre_id" = $1  [["genre_id", 17]]
=> 35

5. Find the total amount of time required to listen to all the tracks in the database.

irb(main):018:0> Track.all.sum("milliseconds")
 (87.2ms)  SELECT SUM("tracks"."milliseconds") FROM "tracks"
=> 1378575827

6.  Find the highest price of any track that has the media type "MPEG audio file".


irb(main):021:0> MediaType.where(name: "MPEG audio file")
  MediaType Load (1.0ms)  SELECT  "media_types".* FROM "media_types" WHERE "media_types"."name" = $1 LIMIT $2  [["name", "MPEG audio file"], ["LIMIT", 11]]
=> #<ActiveRecord::Relation [#<MediaType id: 1, name: "MPEG audio file", created_at: "2006-11-24 08:21:33", updated_at: "2014-01-29 22:14:22">]>

irb(main):027:0> Track.where(media_type_id: 1).maximum("unit_price")
   (4.2ms)  SELECT MAX("tracks"."unit_price") FROM "tracks" WHERE "tracks"."media_type_id" = $1  [["media_type_id", 1]]
=> 0.99e0

7.  Find the name of the most expensive track that has the media type "MPEG audio file".

irb(main):046:0> Track.where(media_type_id: 1).order("unit_price").last
  Track Load (123.3ms)  SELECT  "tracks".* FROM "tracks" WHERE "tracks"."media_type_id" = $1 ORDER BY unit_price DESC LIMIT $2  [["media_type_id", 1], ["LIMIT", 1]]
=> #<Track id: 6, album_id: 1, genre_id: 1, media_type_id: 1, name: "Put The Finger On You", composer: "Angus Young, Malcolm Young, Brian Johnson", milliseconds: 205662, bytes: 6713451, unit_price: 0.99e0, created_at: "2005-01-03 05:49:26", updated_at: "2014-01-29 22:14:56">

irb(main):047:0> Track.where(media_type_id: 1).order("unit_price").last.name
  Track Load (5.9ms)  SELECT  "tracks".* FROM "tracks" WHERE "tracks"."media_type_id" = $1 ORDER BY unit_price DESC LIMIT $2  [["media_type_id", 1], ["LIMIT", 1]]
=> "Put The Finger On You"

8.  Find the 2 oldest artists.

irb(main):058:0> Track.order(:created_at).last(2)
  Track Load (2.5ms)  SELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."created_at" DESC LIMIT $1  [["LIMIT", 2]]
=> [#<Track id: 324, album_id: 29, genre_id: 9, media_type_id: 1, name: "Pererê", composer: "Augusto Conceição/Chiclete Com Banana", milliseconds: 198661, bytes: 6643207, unit_price: 0.99e0, created_at: "2014-01-28 17:21:54", updated_at: "2014-01-29 22:14:56">, #<Track id: 325, album_id: 29, genre_id: 9, media_type_id: 1, name: "TriboTchan", composer: "Cal Adan/Paulo Levi", milliseconds: 194194, bytes: 6507950, unit_price: 0.99e0, created_at: "2014-01-28 17:21:54", updated_at: "2014-01-29 22:14:56">]

9.  Find the least expensive track that has the genre "Electronica/Dance".

irb(main):060:0> Genre.find_by(name: "Electronica/Dance")
  Genre Load (0.7ms)  SELECT  "genres".* FROM "genres" WHERE "genres"."name" = $1 LIMIT $2  [["name", "Electronica/Dance"], ["LIMIT", 1]]
=> #<Genre id: 15, name: "Electronica/Dance", created_at: "2008-05-25 12:13:42", updated_at: "2014-01-29 22:14:08">

irb(main):063:0> Track.where(genre_id: 15).minimum("unit_price")
   (3.2ms)  SELECT MIN("tracks"."unit_price") FROM "tracks" WHERE "tracks"."genre_id" = $1  [["genre_id", 15]]
=> 0.99e0

10.  Find all "MPEG autio file" tracks in the genre "Electronica/Dance".

irb(main):064:0> Track.where(genre_id: 15)
  Track Load (2.1ms)  SELECT  "tracks".* FROM "tracks" WHERE "tracks"."genre_id" = $1 LIMIT $2  [["genre_id", 15], ["LIMIT", 11]]
=> #<ActiveRecord::Relation [#<Track id: 3319, album_id: 259, genre_id: 15, media_type_id: 1, name: "Instinto Colectivo", composer: nil, milliseconds: 300564, bytes: 12024875, unit_price: 0.99e0, created_at: "2004-09-27 22:40:29", updated_at: "2014-01-29 22:15:04">, #<Track id: 3320, album_id: 259, genre_id: 15, media_type_id: 1, name: "Chapa o Coco", composer: nil, milliseconds: 143830, bytes: 5755478, unit_price: 0.99e0, created_at: "2004-09-27 22:40:29", updated_at: "2014-01-29 22:15:04">, #<Track id: 3321, album_id: 259, genre_id: 15, media_type_id: 1, name: "Prostituta", composer: nil, milliseconds: 359000, bytes: 14362307, unit_price: 0.99e0, created_at: "2004-09-27 22:40:29", updated_at: "2014-01-29 22:15:04">, #<Track id: 3322, album_id: 259, genre_id: 15, media_type_id: 1, name: "Eu So Queria Sumir", composer: nil, milliseconds: 269740, bytes: 10791921, unit_price: 0.99e0, created_at: "2004-09-27 22:40:29", updated_at: "2014-01-29 22:15:04">, #<Track id: 3323, album_id: 259, genre_id: 15, media_type_id: 1, name: "Tres Reis", composer: nil, milliseconds: 304143, bytes: 12168015, unit_price: 0.99e0, created_at: "2004-09-27 22:40:29", updated_at: "2014-01-29 22:15:04">, #<Track id: 3324, album_id: 259, genre_id: 15, media_type_id: 1, name: "Um Lugar ao Sol", composer: nil, milliseconds: 212323, bytes: 8495217, unit_price: 0.99e0, created_at: "2004-09-27 22:40:29", updated_at: "2014-01-29 22:15:04">, #<Track id: 3325, album_id: 259, genre_id: 15, media_type_id: 1, name: "Batalha Naval", composer: nil, milliseconds: 285727, bytes: 11431382, unit_price: 0.99e0, created_at: "2004-09-27 22:40:29", updated_at: "2014-01-29 22:15:04">, #<Track id: 3327, album_id: 259, genre_id: 15, media_type_id: 1, name: "O Misterio do Samba", composer: nil, milliseconds: 226142, bytes: 9047970, unit_price: 0.99e0, created_at: "2004-09-27 22:40:29", updated_at: "2014-01-29 22:15:04">, #<Track id: 3328, album_id: 259, genre_id: 15, media_type_id: 1, name: "Armadura", composer: nil, milliseconds: 232881, bytes: 9317533, unit_price: 0.99e0, created_at: "2004-09-27 22:40:29", updated_at: "2014-01-29 22:15:04">, #<Track id: 3329, album_id: 259, genre_id: 15, media_type_id: 1, name: "Na Ladeira", composer: nil, milliseconds: 221570, bytes: 8865099, unit_price: 0.99e0, created_at: "2004-09-27 22:40:29", updated_at: "2014-01-29 22:15:04">, ...]>
